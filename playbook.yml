- hosts: webservers
  gather_facts: no
  remote_user: root
  vars:
      http_port: 8080
      max_clients: 200
      admin_email: you@yourdomain.com
      mysql_admin_username: admin_user
      mysql_admin_password: YOURPASSWORD
      mysql_joomla_username: your_joomla_user
      mysql_joomla_password: TBD
      webmin_version: webmin-1.881
    
  pre_tasks:
      - name: install python 2
        become: yes
        raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)

  tasks:

      - name: Install MySQL
        apt: pkg={{item}} update_cache=yes cache_valid_time=86400 state=present
        become: yes
        with_items:
        - mysql-server

      - name: Install MySql Python
        become: yes
        apt: 
          name: python-mysqldb
          state: latest

#      - name: Secure MYSQL Installation
#        command: mysql_secure_installation --use-default
#        become: yes

      - name: Create Admin User
        command: mysql -uroot -e"create user IF NOT EXISTS {{ mysql_admin_username }}@localhost identified by '{{ mysql_admin_password }}'; grant all privileges on *.* to {{ mysql_admin_username }}@localhost WITH GRANT OPTION; flush privileges";
        become: yes


#      - name: Create Joomla User
#        command: mysql -uroot -e"GRANT ALL PRIVILEGES ON scacrorg.* TO '{{ mysql_joomla_username }}'@'localhost' IDENTIFIED BY '{{ mysql_joomla_password }}'";
#        become: yes

      - name: Install Apache2
        apt:
          name: apache2
          state: latest
        become: yes

      - name: Install Apache2 mod_security
        apt:
          name: libapache2-mod-security2
          state: latest
        become: yes

      - name: Setup mod_security config file
        copy:
          src: ./modsecurity.conf
          dest: /etc/modsecurity/
          mode: 0644
        become: yes

      - name: Setup mod_security Core Ruleset
        copy:
          src: ./security2.conf
          dest: /etc/apache2/mods-available/
          owner: root
          group: root
          mode: 644
        become: yes
        
#      - name: Enable SQL Injection Mod Security Rule
#        file:
#          src: /usr/share/modsecurity-crs/base_rules/modsecurity_crs_41_sql_injection_attacks.conf
#          dest: /usr/share/modsecurity-crs/activated_rules/modsecurity_crs_41_sql_injection_attacks.conf
#          state: link
#        become: yes

      - name: Install PHP
        apt: pkg={{item}}
        become: yes
        with_items:
        - libapache2-mod-php
        - php-mcrypt
        - php-mysql
        - php-mbstring
        - php7.0-mbstring
        - php-gettext
        - libapache2-mod-php7.0
# Required for Froxlor
#        - php-curl
#        - php-bcmath
#        - php-zip

      - name: Configure PHP Security
        copy:
          src: ./php.ini
          dest: /etc/php/7.0/apache2/php.ini
          owner: root
          group: root
          mode: 644
        become: yes
        
      - name: Install PHPMyAdmin
        apt: 
          name: phpmyadmin
          state: latest
        become: yes

#      - name: Download Webmin Archive
#        get_url:
#          url: http://prdownloads.sourceforge.net/webadmin/{{ webmin_version }}.tar.gz
#          dest: /tmp/Webmin.tar.gz

      - name: Create Webmin config directory
        file:
          state: directory
          path: /etc/webmin
          mode: 0755
        become: yes

#      - name: Extract Webmin tar.gz file into 
#        unarchive:
#          src: /tmp/Webmin.tar.gz
#          dest: /usr/share
#          remote_src: yes
#        become: yes

      - name: Configure Apache to run PHPMyAdmin
        copy:
          src: ./apache2.conf
          dest: /etc/apache2/apache2.conf
          owner: root
          group: root
          mode: 644
        become: yes
        
      - name: Reload Apache Confirguration
        command: apachectl -k graceful
        become: yes

      - name: Download Joomla
        get_url:
          url: https://downloads.joomla.org/cms/joomla3/3-8-8/Joomla_3-8-8-Stable-Full_Package.tar.gz?format=gz
          dest: /tmp/Joomla.tar.gz

      - name: Clean /var/www/html folder
        file:
          state: absent
          path: /var/www/html/index.html
        become: yes

      - name: Extract Joomla tar.gz file into 
        unarchive:
          src: /tmp/Joomla.tar.gz
          dest: /var/www/html/
          remote_src: yes
        become: yes

      
      - name: Add certbot apt repository
        apt_repository:
          repo: ppa:certbot/certbot

      - name: Certbot - for ssl security
        apt: 
          name: python-certbot-apache
          state: latest
        become: yes

#      - name: Install certificate
#        command: sudo certbot --apache -d {{inventory_hostname}} -m {{ admin_email }} --agree-tos
